import { Match, PrismaClient } from "@prisma/client";

import { getCache, setCache } from "@/helpers/cache";
import { TournamentService } from "./tournament-service";

const playersDB: {
  [key: number]: {
    id: number;
    firstName: string;
    lastName: string;
    image: string;
    facts?: { title: string; description: string }[];
  };
} = {
  1: {
    id: 1,
    firstName: "–ê–ª–µ–∫—Å–µ–π",
    lastName: "–ú–∏—Ö–∞–ª–µ–≤–∏—á",
    image: "/image/profile/mih-al.jpg",
    facts: [
      {
        title: "–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–µ–∑–æ–Ω–∞ 2024",
        description: "ü•à 2 –º–µ—Å—Ç–æ",
      },
    ],
  },
  2: {
    id: 2,
    firstName: "–í–∏–∫—Ç–æ—Ä–∏—è",
    lastName: "–ï–º–µ–ª—å—è–Ω–µ–Ω–∫–æ",
    image: "/image/profile/emel.jpg",
  },
  3: {
    id: 3,
    firstName: "–ê–Ω—Ç–æ–Ω",
    lastName: "–¢–∏–º—á–µ–Ω–∫–æ",
    image: "/image/profile/timch.jpg",
  },
  4: {
    id: 4,
    firstName: "–ù–∞—Ç–∞–ª—å—è",
    lastName: "–ó–∞–π—Ü–µ–≤–∞",
    image: "/image/profile/zai.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2024",
        description: "ü•á 1 –º–µ—Å—Ç–æ",
      },
      {
        title: "–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–µ–∑–æ–Ω–∞ 2024",
        description: "ü•á 1 –º–µ—Å—Ç–æ",
      },
      {
        title: "–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ–∑–æ–Ω–∞ 2023",
        description: "ü•á 1 –º–µ—Å—Ç–æ",
      },
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–ó–æ–ª–æ—Ç–∞—è –ª–∏–≥–∞. ü•á 1 –º–µ—Å—Ç–æ",
      },
    ],
  },
  5: {
    id: 5,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/kur-dim.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2023",
        description: "ü•à 2 –º–µ—Å—Ç–æ",
      },
    ],
  },
  6: {
    id: 6,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/shal.jpg",
    facts: [],
  },
  7: {
    id: 7,
    firstName: "–ì–ª–µ–±",
    lastName: "–§–æ–∫–∏–Ω",
    image: "/image/profile/fokin-gleb.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2024",
        description: "ü•â 3 –º–µ—Å—Ç–æ",
      },
      {
        title: "–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ–∑–æ–Ω–∞ 2023",
        description: "ü•â 3 –º–µ—Å—Ç–æ",
      },
    ],
  },
  8: {
    id: 8,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/shkret.jpg",
    facts: [
      {
        title: "–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ–∑–æ–Ω–∞ 2023",
        description: "ü•à 2 –º–µ—Å—Ç–æ",
      },
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–ó–æ–ª–æ—Ç–∞—è –ª–∏–≥–∞. ü•à 2 –º–µ—Å—Ç–æ",
      },
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2022",
        description: "ü•á 1 –º–µ—Å—Ç–æ",
      },
      {
        title: "–°–∞–º—ã–π –≥–ª–∞–≤–Ω—ã–π",
        description: "–ò–¥–µ–π–Ω—ã–π –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Ç—É—Ä–Ω–∏—Ä–æ–≤",
      },
    ],
  },
  9: {
    id: 9,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/nazim.jpg",
    facts: [
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–°–µ—Ä–µ–±—Ä—è–Ω–∞—è –ª–∏–≥–∞. ü•á 1 –º–µ—Å—Ç–æ",
      },
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2023",
        description: "ü•à 2 –º–µ—Å—Ç–æ",
      },
    ],
  },
  10: {
    id: 10,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/shest-an.jpg",
  },
  11: {
    id: 11,
    firstName: "–†–æ–º–∞–Ω",
    lastName: "–ê–Ω–∏–∫–∏–Ω",
    image: "/image/profile/anikin-roman.jpg",
  },
  12: {
    id: 12,
    firstName: "–î–º–∏—Ç—Ä–∏–π",
    lastName: "–í–∞—Å–∏–ª—å–µ–≤",
    image: "/image/profile/default.jpg",
  },
  13: {
    id: 13,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/roldug.jpg",
  },
  14: {
    id: 14,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/–∞chkas.jpg",
  },
  15: {
    id: 15,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/rogoz.jpg",
    facts: [
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–°–µ—Ä–µ–±—Ä—è–Ω–∞—è –ª–∏–≥–∞. ü•â 3 –º–µ—Å—Ç–æ",
      },
    ],
  },
  16: {
    id: 16,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/efim.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2023",
        description: "ü•á 1 –º–µ—Å—Ç–æ",
      },
    ],
  },
  17: {
    id: 17,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/gerasimov.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2023",
        description: "ü•â 3 –º–µ—Å—Ç–æ",
      },
    ],
  },
  18: {
    id: 18,
    firstName: "–ù–∏–∫–æ–ª–∞–π",
    lastName: "–°–æ–ª–æ–≤—å–µ–≤",
    image: "/image/profile/solov.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2024",
        description: "ü•à 2 –º–µ—Å—Ç–æ",
      },
    ],
  },
  19: {
    id: 19,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/egorov-maks.jpg",
  },
  20: {
    id: 20,
    firstName: "–î–º–∏—Ç—Ä–∏–π",
    lastName: "–ì–æ–Ω–¥—é—Ö–∏–Ω",
    image: "/image/profile/gonduh.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2024",
        description: "ü•â 3 –º–µ—Å—Ç–æ",
      },
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–ë—Ä–æ–Ω–∑–æ–≤–∞—è –ª–∏–≥–∞. ü•â 2 –º–µ—Å—Ç–æ",
      },
    ],
  },
  21: {
    id: 21,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/rabch.jpg",
  },
  22: {
    id: 22,
    firstName: "–ò–ª—å—è",
    lastName: "–ö—É—Ä–≥—É–∑–æ–≤",
    image: "/image/profile/kurguzov.jpg",
  },
  23: {
    id: 23,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/katrenko.jpg",
  },
  24: {
    id: 24,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/kozurin.jpg",
  },
  25: {
    id: 25,
    firstName: "–î–º–∏—Ç—Ä–∏–π",
    lastName: "–õ–∞—Å—Ç–æ–≤—Å–∫–∏–π",
    image: "/image/profile/default.jpg",
  },
  26: {
    id: 26,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/homich.jpg",
    facts: [
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–ë—Ä–æ–Ω–∑–æ–≤–∞—è –ª–∏–≥–∞. ü•â 3 –º–µ—Å—Ç–æ",
      },
    ],
  },
  27: {
    id: 27,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/ryzkova.jpg",
  },
  28: {
    id: 28,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/isaev.jpg",
    facts: [
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–ó–æ–ª–æ—Ç–∞—è –ª–∏–≥–∞. ü•â 3 –º–µ—Å—Ç–æ",
      },
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2022",
        description: "ü•à 2 –º–µ—Å—Ç–æ",
      },
    ],
  },
  29: {
    id: 29,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/sobolev.jpg",
  },
  30: {
    id: 30,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/tam-n.jpg",
    facts: [
      {
        title: "–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–µ–∑–æ–Ω–∞ 2024",
        description: "ü•â 3 –º–µ—Å—Ç–æ",
      },
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–°–µ—Ä–µ–±—Ä—è–Ω–∞—è –ª–∏–≥–∞. ü•à 2 –º–µ—Å—Ç–æ",
      },
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2023",
        description: "ü•á 1 –º–µ—Å—Ç–æ",
      },
    ],
  },
  31: {
    id: 31,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/bojenova.jpg",
  },
  32: {
    id: 32,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/fokina-marina.jpg",
    facts: [],
  },
  33: {
    id: 33,
    firstName: "–ú–∏—Ä–∑–æ–∞—Ö–∞–¥",
    lastName: "–ó–∞–π–Ω–∏–¥–∏–Ω–æ–≤",
    image: "/image/profile/default.jpg",
    facts: [
      {
        title: "–õ–µ—Ç–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä 2023",
        description: "–ë—Ä–æ–Ω–∑–æ–≤–∞—è –ª–∏–≥–∞. ü•á 1 –º–µ—Å—Ç–æ",
      },
    ],
  },
  34: {
    id: 34,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/yugai.jpg",
  },
  35: {
    id: 35,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/bojenov-vadim.jpg",
  },
  36: {
    id: 36,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/default.jpg",
  },
  37: {
    id: 37,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/default.jpg",
  },
  38: {
    id: 38,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/default.jpg",
  },
  39: {
    id: 39,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/default.jpg",
  },
  40: {
    id: 40,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/default.jpg",
  },
  41: {
    id: 41,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/default.jpg",
  },
  42: {
    id: 42,
    firstName: "noname",
    lastName: "lastname",
    image: "/image/profile/default.jpg",
  },

  43: {
    id: 42,
    firstName: "–í–∏–∫—Ç–æ—Ä",
    lastName: "–ò–≤–∞–Ω–æ–≤",
    image: "/image/profile/ivanov-viktor.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2023",
        description: "ü•â 3 –º–µ—Å—Ç–æ",
      },
    ],
  },
  44: {
    id: 42,
    firstName: "–ê–ª–µ–∫—Å–µ–π",
    lastName: "–ï–≥–æ—Ä–æ–≤",
    image: "/image/profile/default.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2024",
        description: "ü•á 1 –º–µ—Å—Ç–æ",
      },
    ],
  },
  45: {
    id: 42,
    firstName: "–ú–∞—Ä–∏–Ω–∞",
    lastName: "–í–æ—Ä–æ–±—å–µ–≤–∞",
    image: "/image/profile/default.jpg",
    facts: [
      {
        title: "–°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä—ã 2024",
        description: "ü•à 2 –º–µ—Å—Ç–æ",
      },
    ],
  },
};

type MatchResult = "PLAYER1_WIN" | "PLAYER2_WIN" | "DRAW" | "TBD";

interface MatchDetail {
  opponent: {
    name: string;
    id: number;
  };

  result: MatchResult;
}

interface Round {
  round: number;
  matches: MatchDetail[];
}

interface PlayerProfile {
  player: {
    id: number;
    name: string;
    gamesPlayed: number;
    image: string;
    facts: { title: string; description: string }[];
  };
  matchDetails: Round[];
}

export class UserService {
  constructor(
    private prisma: PrismaClient,
    private tournamentService: TournamentService
  ) {}

  async getUserProfile(id: number): Promise<PlayerProfile | null> {
    const cacheKey = "profile" + id;
    const cachedResult = getCache(cacheKey);
    if (cachedResult) {
      console.log(cacheKey + "_HIT");
      return cachedResult;
    }

    const player = await this.prisma.user.findUnique({
      where: {
        id,
      },
    });

    const players2 = await this.tournamentService.getPlayers(1);
    const matches2 = await this.getUserMatches(id);

    if (!player) {
      return null;
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–≤
    const allOpponents = players2.filter((p) => p.id !== id);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–∞—Ç—á–∞–ø—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
    const allPossibleMatches = allOpponents.map((opponent) => ({
      player1Id: id,
      player2Id: opponent.id,
      result: "TBD",
      date: new Date(),
    }));

    // –ò—Å–∫–ª—é—á–∞–µ–º —É–∂–µ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏
    const remainingMatches = allPossibleMatches.filter((possibleMatch) => {
      return !matches2.some(
        (match) =>
          (match.player1Id === possibleMatch.player1Id &&
            match.player2Id === possibleMatch.player2Id) ||
          (match.player1Id === possibleMatch.player2Id &&
            match.player2Id === possibleMatch.player1Id)
      );
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏ –ø–æ –¥–∞—Ç–µ
    const completedMatches = matches2.sort(
      (a, b) => a.date.getTime() - b.date.getTime()
    );

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏
    const detailedMatches = completedMatches.map((match) => ({
      match,
      opponent: players2.find(
        (p) =>
          p.id === (match.player1Id === id ? match.player2Id : match.player1Id)
      ),
    }));

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ç—á–∏
    const remainingDetailedMatches = remainingMatches.map((match) => ({
      match,
      opponent: players2.find((p) => p.id === match.player2Id),
    }));

    // –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ç—á–∏
    const combinedMatches = [...detailedMatches, ...remainingDetailedMatches];

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–∞—Ç—á–∏ –ø–æ —Ç—É—Ä–∞–º (4 –º–∞—Ç—á–∞ –≤ –∫–∞–∂–¥–æ–º —Ç—É—Ä–µ)
    const groupedMatches: Round[] = [];
    for (let i = 0; i < combinedMatches.length; i += 4) {
      groupedMatches.push({
        round: i / 4 + 1,
        matches: combinedMatches.slice(i, i + 4).map(({ match, opponent }) => ({
          opponent: opponent
            ? {
                id: opponent.id,
                name: `${opponent.lastName} ${opponent.firstName}`,
              }
            : {
                id: 0,
                name: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π",
              },
          result: (match.date <= new Date()
            ? match.player1Id === id
              ? match.result
              : match.result === "PLAYER1_WIN"
              ? "PLAYER2_WIN"
              : match.result === "PLAYER2_WIN"
              ? "PLAYER1_WIN"
              : "DRAW"
            : "TBD") as MatchResult,
        })),
      });
    }

    const image = playersDB[player.id]?.image ?? "/image/profile/default.jpg";
    const facts = playersDB[player.id]?.facts ?? [];

    const output = {
      player: {
        id: player.id,
        name:
          `${player.lastName || ""} ${player.firstName || ""}`.trim() ??
          "–ë–µ–∑ –∏–º–µ–Ω–∏",
        image,
        facts,
        gamesPlayed: matches2.length,
      },
      matchDetails: groupedMatches,
    };

    setCache(cacheKey, output);

    return output;
  }

  private async getUserMatches(playerId: number): Promise<Match[]> {
    return this.prisma.match.findMany({
      where: {
        AND: [{ OR: [{ player1Id: playerId }, { player2Id: playerId }] }],
      },
      orderBy: {
        date: "asc",
      },
    });
  }
}
